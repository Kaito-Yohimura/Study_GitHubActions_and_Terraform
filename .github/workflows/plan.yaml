# Workflow Name
name: github-actions-per-push

# Running Timing
on:
  pull_request:
    types: [opened, reopened]

# Define Job
jobs:

  # Job Name
  plan:
    # Running Env
    runs-on: ubuntu-latest

    # Define Tasks in Job
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 1.4.2

      - name: Check format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Initialize
        id: init
        run: cd terraform; pwd; terraform init

      - name: Download modules
        run: cd terraform; pwd; terraform get

      - name: Validate
        run: cd terraform; pwd; terraform validate

      - name: Plan
        id: plan
        run: cd terraform; pwd; terraform plan -no-color
        continue-on-error: true

      # Create Comment on PR
      - name: Comment
        uses: actions/github-script@v3.0.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const output = `
            #### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
